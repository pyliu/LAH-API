<?php
require_once(dirname(dirname(__FILE__))."/init.php");
require_once(ROOT_DIR."/include/Cache.class.php");
require_once(ROOT_DIR."/include/Query.class.php");
require_once(ROOT_DIR.'/vendor/autoload.php');
require_once("FileAPICommand.class.php");

use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use PhpOffice\PhpSpreadsheet\IOFactory;

class FileAPIExcelExportCommand extends FileAPICommand {
    private $query;
    private $cache;
    private $type;

    private function test() {
        // $spreadsheet = IOFactory::load('test.xlsx');
        // $worksheet = $spreadsheet->getActiveSheet();
        // $worksheet->getCell('A1')->setValue('套用樣板測試');

        $spreadsheet = new Spreadsheet();
        $sheet       = $spreadsheet->getActiveSheet();
        $sheet->setCellValue('A1', '這是第一格');
        $sheet->getCell('A2')->setValue('這是第2格');

        $writer = new Xlsx($spreadsheet);
        $expfile = dirname(dirname(dirname(__FILE__))).'/exports/'.$this->filename.'.xlsx';
        $writer->save($expfile);
        unset($writer);

        // $writer = new Xlsx($spreadsheet);
        // $writer->save('exports/hello world.xlsx');
        ob_end_clean();
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        // header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="'.$this->filename.'.xlsx"');
        header('Cache-control: no-cache, pre-check=0, post-check=0, max-age=0');
        // https://stackoverflow.com/questions/34381816/phpexcel-return-a-corrupted-file
        // need to add this line to prevent corrupted file
        ob_end_clean();

        $writer = IOFactory::createWriter(IOFactory::load($expfile), 'Xlsx');
        $writer->save('php://output');
        // $writer = IOFactory::createWriter($spreadsheet, 'Xlsx');
        // $writer->save('php://output');
        // readfile($expfile);
    }

    private function write_export_tmp_file(&$spreadsheet, $filename = 'tmp.xlsx') {
        // also write a copy to export folder
        $writer = new Xlsx($spreadsheet);
        $writer->save(ROOT_DIR.'/exports/'.$filename);
        zipExports();
    }

    private function write_php_output(&$spreadsheet, $filename = 'tmp.xlsx') {
        ob_end_clean();
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="'.$filename.'"');
        header('Cache-Control: max-age=0');
        //ob_end_clean();

        $writer = IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
    }

    private function cert_log() {
        // from init.php
        global $log, $today;

        $mock = SYSTEM_CONFIG["MOCK_MODE"];
        if ($mock) $log->warning("現在處於模擬模式(mock mode)，API僅會回應之前已被快取之最新的資料！【cert_log】");
        $query_result = $mock ? $this->cache->get('cert_log') : $this->query->getCertLog($_SESSION['section_code'], $_SESSION['numbers']);
        if (!$mock) $this->cache->set('cert_log', $query_result);

        $spreadsheet = IOFactory::load(ROOT_DIR.'/assets/xlsx/cert_log.tpl.xlsx');
        // $spreadsheet = new Spreadsheet();
        $worksheet = $spreadsheet->getActiveSheet();

        $init_col_char = 'A';
        $row_num = 1;
        foreach( array_values($query_result) as $index => $row ) {
            $row_num = $index + 3;  // template has the header and title row, so add 3
            $col_char = 'A';
            foreach( $row as $col ) {
                //$worksheet->getCell(($col_char++).$row_num)->setValue($col);
                // tell PhpSpreadsheet it should be treated as a string
                $worksheet->setCellValueExplicit(
                    ($col_char++).$row_num,
                    $col,
                    \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING
                );
            }
        }

        $spreadsheet->getProperties()
            ->setCreator("地政WEB版輔助系統")
            ->setLastModifiedBy("地政WEB版輔助系統")
            ->setTitle("地政系統WEB版謄本LOG檔查詢")
            ->setSubject("地政系統WEB版謄本LOG檔查詢")
            ->setDescription(
                "document for Office 2007 XLSX, generated by PHPSpreadsheet classes."
            )
            ->setKeywords("office 2007 openxml php xlsx log cert")
            ->setCategory("export");

        $filename = $today.'_'.$_SESSION['section_code'].'_'.implode('_', $_SESSION['numbers']).'.xlsx';
        $this->write_export_tmp_file($spreadsheet, $filename);
        $this->write_php_output($spreadsheet, $filename);
    }

    function __construct() {
        $this->query = new Query();
        $this->cache = new Cache();
        $this->type = $_SESSION['xlsx_type'] ?? false;
    }

    function __destruct() {}

    public function execute() {
        global $log;
        // factory method here
        switch($this->type) {
            case 'cert_log':
                $this->cert_log();
                break;
            default:
                $log->error('xlsx_type is not set, can not output xlsx file! ['.print_r($_SESSION, true).']');
                break;
        }
    }
}
?>